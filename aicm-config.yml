# aicm Configuration File
# AI Context Management Tool - Configuration for multiple AI coding agents
# For more information: https://github.com/morooka-akira/aicm

# Configuration file version (required)
version: "1.0"

# Global output mode for all agents (default: merged)
# - merged: Combine all markdown files into one file per agent
# - split: Create separate files for each markdown file
output_mode: merged

# Global base documentation directory (default: ./ai-docs)
# This directory should contain your markdown documentation files
base_docs_dir: ./ai-docs

# Whether to include filename headers in merged mode (default: false)
# When true, adds filename headers in merged content
include_filenames: false

# Agent configurations
agents:
  # Cursor IDE Agent - Generates .cursor/rules/*.mdc files
  cursor:
    enabled: true
    output_mode: split  # Override global setting for Cursor
    include_filenames: true
    # Agent-specific documentation directory (optional)
    # base_docs_dir: ./cursor-docs
    split_config:
      rules:
        # Always Apply Rule - Always loaded in Cursor
        - file_patterns: ["*overview*", "*common*"]
          alwaysApply: true
        
        # Auto Attached Rule - Automatically attached when editing matching files
        - file_patterns: ["*rust*", "*backend*"]
          globs: ["**/*.rs", "**/*.toml"]
        
        # Agent Requested Rule - Loaded when agent explicitly requests
        - file_patterns: ["*api*", "*architecture*"]
          description: "API design and system architecture guidelines"
        
        # Manual Rule - Only loaded when manually referenced
        - file_patterns: ["*troubleshoot*", "*debug*"]
          manual: true

  # GitHub Copilot Agent - Generates .github/instructions/*.instructions.md files
  github:
    enabled: true
    output_mode: split
    # base_docs_dir: ./github-docs  # Agent-specific docs (optional)
    split_config:
      rules:
        # Backend development rules - Applied to Rust files
        - file_patterns: ["*rust*", "*backend*", "*api*"]
          apply_to: ["**/*.rs", "**/*.toml"]
        
        # Frontend development rules - Applied to TypeScript files
        - file_patterns: ["*frontend*", "*ui*", "*component*"]
          apply_to: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx"]

  # Cline Agent - Generates .clinerules/*.md files
  cline:
    enabled: true
    output_mode: merged  # Cline works well with merged content
    # base_docs_dir: ./cline-docs  # Agent-specific docs (optional)

  # Claude Code Agent - Generates CLAUDE.md file
  claude:
    enabled: true
    # Note: Claude always uses merged mode
    include_filenames: true
    # base_docs_dir: ./claude-docs  # Agent-specific docs (optional)

  # OpenAI Codex Agent - Generates AGENTS.md file
  codex:
    enabled: false
    # Note: Codex always uses merged mode
    # base_docs_dir: ./codex-docs  # Agent-specific docs (optional)